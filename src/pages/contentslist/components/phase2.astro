<div id="phase2">
  <div id="element1" style="left: 50px; top: 50px; position: absolute;">
    要素1
  </div>
  <div id="element2" style="left: 200px; top: 200px; position: absolute;">
    要素2
  </div>
  <div id="line" style="position: absolute;"></div>

  <script>
    function calculateCoordinates(elem1Id, elem2Id) {
      const elem1 = document.getElementById(elem1Id).getBoundingClientRect();
      const elem2 = document.getElementById(elem2Id).getBoundingClientRect();

      const x1 = elem1.left + elem1.width / 2;
      const y1 = elem1.top + elem1.height / 2; // 修正: window.innerHeight - を削除
      const x2 = elem2.left + elem2.width / 2;
      const y2 = elem2.top + elem2.height / 2; // 修正: window.innerHeight - を削除

      return { x1, y1, x2, y2 };
    }

    function calculateDistanceAndAngle(coordinates) {
      const { x1, y1, x2, y2 } = coordinates;

      const length = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);
      let angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);
      angle = angle < 0 ? angle + 360 : angle;

      return { length, angle };
    }

    function drawLine(lineId) {
      const coordinates = calculateCoordinates("element1", "element2");
      const { length, angle } = calculateDistanceAndAngle(coordinates);
      const { x1, y1 } = coordinates;
      const line = document.getElementById(lineId);

      // TODO: css外部化
      line.style.position = "absolute";
      line.style.height = "2px"; // ラインの太さを設定
      line.style.backgroundColor = "black"; // ラインの色を設定
      line.style.transformOrigin = "0 50%"; // 回転の基点を設定
      line.style.width = `${length}px`;
      line.style.transform = `rotate(${angle}deg)`;
      line.style.left = `${x1}px`;
      line.style.top = `${y1 - 1}px`; // ラインの太さを考慮
    }

    let draggedElement = null;

    function onMousedown(event) {
      draggedElement = event.target;
      document.addEventListener("mousemove", onMousemove);
    }

    function onMousemove(event) {
      if (draggedElement) {
        const rect = draggedElement.getBoundingClientRect();
        draggedElement.style.left = `${event.clientX - rect.width / 2}px`;
        draggedElement.style.top = `${event.clientY - rect.height / 2}px`;
        drawLine("line");
      }
    }

    function onMouseup() {
      draggedElement = null;
      document.removeEventListener("mousemove", onMousemove);
    }

    window.addEventListener("load", () => {
      drawLine("line");
      document
        .getElementById("element1")
        .addEventListener("mousedown", onMousedown);
      document
        .getElementById("element2")
        .addEventListener("mousedown", onMousedown);
      document.addEventListener("mouseup", onMouseup);
    });
  </script>
</div>

<style>
  #element1,
  #element2 {
    position: absolute;
    user-select: none; /* テキストの選択を防止 */
    cursor: move; /* ドラッグ可能であることを示すカーソル */
  }
</style>
