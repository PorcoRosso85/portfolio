<div id="phase1">
  <ol class="directory">
    <li data-item="item1"><span>item1</span></li>
    <li data-item="item2">
      <span>item2</span>
      <ol class="file">
        <li data-item="item3">
          <span>item3</span>
          <ol class="function">
            <li id="3-fn1" data-fn="fn1"><span>fn1</span></li>
            <li data-fn="fn2"><span>fn2</span></li>
            <li data-fn="fn3"><span>fn3</span></li>
            <li data-fn="fn4"><span>fn4</span></li>
          </ol>
        </li>
        <li data-item="item4">
          <span>item4</span>
          <ol class="function">
            <li data-fn="fn1"><span>fn1</span></li>
            <li id="4-fn2" data-fn="fn2"><span>fn2</span></li>
          </ol>
        </li>
      </ol>
    </li>
    <li data-item="item5"><span>item5</span></li>
    <li data-item="item1"><span>item1</span></li>
    <li data-item="item2">
      <span>item2</span>
      <ol class="file">
        <li data-item="item3"><span>item3</span></li>
        <li data-item="item4">
          <span>item4</span>
          <ol class="function">
            <li data-fn="fn1"><span>fn1</span></li>
            <li data-fn="fn2"><span>fn2</span></li>
          </ol>
        </li>
      </ol>
    </li>
    <li data-item="item5"><span>item5</span></li>
  </ol>
  <div id="element1" style="left: 50px; top: 50px; position: absolute;">
    要素1
  </div>
  <div id="element2" style="left: 200px; top: 200px; position: absolute;">
    要素2
  </div>
  <div id="line" style="position: absolute;"></div>
</div>

<style>
  .directory,
  .file {
    list-style-type: none;
  }

  .directory > li,
  .file > li {
    display: flex;
    align-items: flex-start;
  }

  .directory > li > span,
  .file > li > span {
    margin-right: 20px;
  }

  li > ol {
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
    list-style-type: none;
  }

  li > ol.function {
    flex-direction: row;
  }

  .function > li {
    margin-right: 10px;
  }
</style>
<script>
  function calculateCoordinates(elem1Id, elem2Id) {
    const elem1 = document.getElementById(elem1Id).getBoundingClientRect();
    const elem2 = document.getElementById(elem2Id).getBoundingClientRect();

    const x1 = elem1.left + elem1.width / 2;
    const y1 = elem1.top + elem1.height / 2; // 修正: window.innerHeight - を削除
    const x2 = elem2.left + elem2.width / 2;
    const y2 = elem2.top + elem2.height / 2; // 修正: window.innerHeight - を削除

    return { x1, y1, x2, y2 };
  }

  function calculateDistanceAndAngle(coordinates) {
    const { x1, y1, x2, y2 } = coordinates;

    const length = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);
    let angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);
    angle = angle < 0 ? angle + 360 : angle;

    return { length, angle };
  }

  function drawLine(lineId) {
    const coordinates = calculateCoordinates("3-fn1", "4-fn2");
    const { length, angle } = calculateDistanceAndAngle(coordinates);
    const { x1, y1 } = coordinates;
    const line = document.getElementById(lineId);

    // TODO: css外部化
    line.style.position = "absolute";
    line.style.height = "2px"; // ラインの太さを設定
    line.style.backgroundColor = "black"; // ラインの色を設定
    line.style.transformOrigin = "0 50%"; // 回転の基点を設定
    line.style.width = `${length}px`;
    line.style.transform = `rotate(${angle}deg)`;
    line.style.left = `${x1}px`;
    line.style.top = `${y1 - 1}px`; // ラインの太さを考慮
  }

  let draggedElement = null;

  function onMousedown(event) {
    draggedElement = event.target;
    document.addEventListener("mousemove", onMousemove);
  }

  function onMousemove(event) {
    if (draggedElement) {
      const rect = draggedElement.getBoundingClientRect();
      draggedElement.style.left = `${event.clientX - rect.width / 2}px`;
      draggedElement.style.top = `${event.clientY - rect.height / 2}px`;
      drawLine("line");
    }
  }

  function onMouseup() {
    draggedElement = null;
    document.removeEventListener("mousemove", onMousemove);
  }

  window.addEventListener("load", () => {
    drawLine("line");
    document.getElementById("3-fn1").addEventListener("mousedown", onMousedown);
    document.getElementById("4-fn2").addEventListener("mousedown", onMousedown);
    document.addEventListener("mouseup", onMouseup);
  });
</script>
